// Определите (выделите память под) три глобальных 32-битных целых знаковых переменных A, B, R. 
// Напишите функцию process, которая вычисляет R = A*B. Гарантируется, что результат представим 32-битным знаковым числом.

// Умножение следует реализовать на основе сложений и сдвигов, инструкция imul запрещена. 
// В сдаваемом файле должны быть определены только переменные и функция process.




        .text
        .global process
process:
	push	%ebp
	mov	%esp, %ebp
        push    %ebx
        // ecx -- рассматриваемая степень двойки
        movl    $1, %ecx
        // будем хранить в eax значение A со сдвигом
        // будем сдвигать в каждой итерации цикла
	movl    A, %eax
        movl    $0, %ebx
loop:
        // умножаем на 2 и смотрим, не больше ли оно B
        rol     $1, %ecx
        incl    %ebx
        cmp     $32, %ebx
        jge     add_B
        sal     $1, %eax

        // сохраняем в регистре edx нашу степень двойки
        movl    %ecx, %edx
        // смотрим, есть ли эта степень в числе B
        and     B, %edx
        jz      loop

        // если есть, то прибавляем сдвинутое A к ответу
        add     %eax, R
        jmp     loop

// если у нас нечетное число, то надо просто прибавить B в конце еще раз
add_B:
        movl    B, %edx
        and     $1, %edx
        jz      ending
        mov     A, %eax
        add     %eax, R

ending:
        pop     %ebx
	mov	%esp, %ebp
	pop	%ebp
        ret

	.global A, B, R

        .data
A:
        .int    0
B:
        .int    0
R:
        .int    0
